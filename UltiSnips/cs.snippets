snippet cclass "create class" b
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;


namespace ${2}${1:`!p snip.rv = os.path.basename(os.path.dirname(vim.current.buffer.name))`}
{
	public class `!p snip.rv = snip.basename` ${3}
	{
		$0
	}
}
endsnippet


snippet ccontroller "create mvc controller" b
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.ModelBinding;
using Microsoft.Extensions.Logging;

namespace ${2}${1:`!p snip.rv = os.path.basename(os.path.dirname(vim.current.buffer.name))`}
{
	[Route("/api/[Controller]")]
	public class `!p snip.rv = snip.basename` : Controller
	{
		$0
	}
}
endsnippet

snippet cinterface "create interface" b
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;


namespace ${2}${1:`!p snip.rv = os.path.basename(os.path.dirname(vim.current.buffer.name))`}
{
	public interface `!p snip.rv = snip.basename` ${3}
	{
		$0
	}
}
endsnippet

snippet dbmodel "create db model" b
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;

namespace ${2}${1:`!p snip.rv = os.path.basename(os.path.dirname(vim.current.buffer.name))`}
{
	[Table("${3}")]
	public class `!p snip.rv = snip.basename`
	{
		[DatabaseGenerated(DatabaseGeneratedOption.Identity)]
		[Column("id")]
		public int Id { get;set; }
		$0
		[Column("ctime")]
		[DatabaseGenerated(DatabaseGeneratedOption.Identity)]
		public DateTime? CTime { get;set; }
		[Column("utime")]
		[DatabaseGenerated(DatabaseGeneratedOption.Identity)]
		public DateTime? UTime { get;set; }

	}
}
endsnippet

snippet noim "not implement exception"
throw new NotImplementedException();
endsnippet

snippet /// "comment summary" b
/// <summary>
/// $0
/// </summary>
endsnippet

snippet ///param "comment param" b
/// <param name="${1}">
/// $0
/// </param>
endsnippet

snippet ///returns "comment returns" b
/// <returns>
/// $0
/// </returns>
endsnippet

snippet logger "create logger" b
private static Logger logger = LogManager.GetCurrentClassLogger();
endsnippet

snippet prop "create default propery" w
{ get;set; }
endsnippet

snippet Column "column mapping"
[Column("$0")]
endsnippet

